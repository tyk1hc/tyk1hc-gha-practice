name: 'Create Infra with Terraform'

on:
 push:
   branches: [main]
   paths: ./.github/workflows/devops.yml
 workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_REMOTE_STATE_STORAGE_ACCOUNT_NAME: storagetfstatelearning
  TF_REMOTE_STATE_STORAGE_ACCOUNT_LOCATION: southeastasia

  TF_REMOTE_STATE_RESOURCE_GROUP_NAME: rg-tf-state-learning
  TF_REMOTE_STATE_RESOURCE_GROUP_LOCATION: southeastasia

  TF_REMOTE_STATE_CONTAINER_NAME: tfstatelearning
  TF_REMOTE_STATE_BLOB_NAME: tflearning.tfstate

  TF_WORKING_DIRECTORY: stardog/environments/development

jobs:

  # Run unit test to check terraform environment
  #tf-unit-tests:
  #  uses: ./.github/workflows/tf-unit-tests.yml
  scan-terraform-config:
    runs-on: ubuntu-latest
    name: Scan Terraform with Checov
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Checkov Scan
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.TF_WORKING_DIRECTORY }}
          soft_fail: true # optional: do not return an error code if there are failed checks
          # check: CKV_AWS_1 # optional: run only a specific check_id. can be comma separated list
          # skip_check: CKV_AWS_2 # optional: skip a specific check_id. can be comma separated list
          # quiet: true # optional: display only failed checks
          # framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          # output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          # download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          # log_level: DEBUG # optional: set log level. Default WARNING
          # config_file: path/this_file
          # baseline: cloudformation/.checkov.baseline # optional: Path to a generated baseline file. Will only report results not in the baseline.
          # container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues

  # Initial Variables
  devops-initial-variables:
    name: DevOps - Initial Variables
    runs-on: ubuntu-latest
    environment: development
    needs: [scan-terraform-config]
    outputs:
      variable_Resource_Group_Name: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_REMOTE_STATE_RESOURCE_GROUP_NAME }}
      variable_Resource_Group_location: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_REMOTE_STATE_RESOURCE_GROUP_LOCATION }}
      variable_Storage_Acccount_Name: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_REMOTE_STATE_STORAGE_ACCOUNT_NAME }}
      variable_Storage_Account_Location: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_REMOTE_STATE_STORAGE_ACCOUNT_LOCATION }}
      variable_Storage_Container_Name: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_REMOTE_STATE_CONTAINER_NAME }}
      variable_Storage_Blob_Name: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_REMOTE_STATE_BLOB_NAME }}
      variable_Working_Directory: ${{ steps.Step-devops-initial-variables.outputs.Step_TF_WORKING_DIRECTORY }}
    steps:
      - name: Set Initial Variables
        id: Step-devops-initial-variables
        run: |
          # Terraform Remote Storage Resource Group
          echo "Terraform Remote Storage Resource Group Name: $TF_REMOTE_STATE_RESOURCE_GROUP_NAME"
          echo "Step_TF_REMOTE_STATE_RESOURCE_GROUP_NAME=$TF_REMOTE_STATE_RESOURCE_GROUP_NAME" >> $GITHUB_OUTPUT
          echo "Terraform Remote State Resource Group Location: $TF_REMOTE_STATE_RESOURCE_GROUP_LOCATION"
          echo "Step_TF_REMOTE_STATE_RESOURCE_GROUP_LOCATION=$TF_REMOTE_STATE_RESOURCE_GROUP_LOCATION" >> $GITHUB_OUTPUT

          # Terraform Remote Storage Account
          echo "Terraform Remote Storage Account Name: $TF_REMOTE_STATE_STORAGE_ACCOUNT_NAME"
          echo "Step_TF_REMOTE_STATE_STORAGE_ACCOUNT_NAME=$TF_REMOTE_STATE_STORAGE_ACCOUNT_NAME" >> $GITHUB_OUTPUT
          echo "Terraform Remote Storage Account Location: $TF_REMOTE_STATE_STORAGE_ACCOUNT_LOCATION"
          echo "Step_TF_REMOTE_STATE_STORAGE_ACCOUNT_LOCATION=$TF_REMOTE_STATE_STORAGE_ACCOUNT_LOCATION" >> $GITHUB_OUTPUT

          echo "Terraform Remote State Container Name: $TF_REMOTE_STATE_CONTAINER_NAME"
          echo "Step_TF_REMOTE_STATE_CONTAINER_NAME=$TF_REMOTE_STATE_CONTAINER_NAME" >> $GITHUB_OUTPUT
          echo "Terraform Remote State Blob Name: $TF_REMOTE_STATE_BLOB_NAME"
          echo "Step_TF_REMOTE_STATE_BLOB_NAME=$TF_REMOTE_STATE_BLOB_NAME" >> $GITHUB_OUTPUT

          echo "Terraform Working Directory: $TF_WORKING_DIRECTORY"
          echo "Step_TF_WORKING_DIRECTORY=$TF_WORKING_DIRECTORY" >> $GITHUB_OUTPUT


  deploy-azure-infra-terraform:
    needs: [devops-initial-variables]
    name: Deploy Azure Infra
    uses: ./.github/workflows/tf-remote-state-ini.yml
    with:
      param_env: development
      param_runner: ubuntu-latest
      param_resource_group_name: ${{ needs.devops-initial-variables.outputs.variable_Resource_Group_Name }}
      param_resource_group_location: ${{ needs.devops-initial-variables.outputs.variable_Resource_Group_location }}
      param_storage_account_name: ${{ needs.devops-initial-variables.outputs.variable_Storage_Acccount_Name }}
      param_storage_account_location: ${{ needs.devops-initial-variables.outputs.variable_Storage_Account_Location }}
      param_storage_container_name: ${{ needs.devops-initial-variables.outputs.variable_Storage_Container_Name }}
      param_storage_blob_name: ${{ needs.devops-initial-variables.outputs.variable_Storage_Blob_Name }}
      param_working_directory: ${{ needs.devops-initial-variables.outputs.variable_Working_Directory }}
    secrets:
      param_azure_credentials: ${{ secrets.AZURE_LEARNING_CREDENTIALS }}
      param_azure_client_id: ${{ secrets.ARM_LEARNING_CLIENT_ID }}
      param_azure_subscription: ${{ secrets.ARM_LEARNING_SUBSCRIPTION_ID }}
      param_azure_tenant: ${{ secrets.ARM_LEARNING_TENANT_ID }}